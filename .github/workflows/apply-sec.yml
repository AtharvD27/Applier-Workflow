name: Auto Apply Jobs (Secondary)

on:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: lock-stealth-sec
  cancel-in-progress: false

jobs:
  auto_apply:
    runs-on: ubuntu-latest

    steps:
      # 0. Checkout public repo
      - name: Checkout public repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      # 1. Checkout private scripts
      - name: Checkout private scripts
        uses: actions/checkout@v3
        with:
          repository: AtharvD27/Dice-Auto-Applier
          token: ${{ secrets.PRIVATE_SCRIPTS_PAT }}
          path: scripts

      # 2. Ensure public repo output structure exists, then create symlink
      - name: Setup output directory and symlink
        run: |
          # Get absolute path of public repo's output
          PUBLIC_OUTPUT=$(realpath output)
          echo "Public repo output path: $PUBLIC_OUTPUT"
          
          # Ensure output/logs exists in public repo
          mkdir -p output/logs
          
          # Remove any existing output in scripts
          rm -rf scripts/output
          
          # Create symlink using absolute path
          ln -s "$PUBLIC_OUTPUT" scripts/output
          
          # Debug: Check what we created
          echo "=== Symlink details ==="
          ls -la scripts/
          echo "=== Following symlink ==="
          ls -la scripts/output/
          echo "=== Real output directory ==="
          ls -la output/

      # 3. Setup Python & Chrome
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Chrome & Chromedriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip curl
          wget https://storage.googleapis.com/chrome-for-testing-public/136.0.7103.94/linux64/chrome-linux64.zip
          unzip -q chrome-linux64.zip
          sudo mv chrome-linux64 /opt/chrome
          sudo ln -sf /opt/chrome/chrome /usr/bin/google-chrome
          wget https://storage.googleapis.com/chrome-for-testing-public/136.0.7103.94/linux64/chromedriver-linux64.zip
          unzip -q chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          google-chrome --version
          chromedriver --version

      # 4. Install dependencies
      - name: Install Python dependencies
        working-directory: scripts
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 5. Run the apply script with secondary credentials
      - name: Run apply from private repo
        working-directory: scripts
        env:
          APPLY_EMAIL:    ${{ secrets.APPLY_EMAIL_SEC }}      # Different credentials
          APPLY_PASSWORD: ${{ secrets.APPLY_PASSWORD_SEC }}   # Different credentials
          APPLY_PROCESS_FAILED: ${{ secrets.APPLY_PROCESS_FAILED_SEC || 'false' }}
        run: python src/stealth_apply.py

      # 6. Commit final_ml_jobs.csv & logs back to public repo
      - name: Commit and push results to public repo
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"
          
          # Add files from the public repo's output directory
          [ -f output/final_ml_jobs.csv ] && git add output/final_ml_jobs.csv
          [ -d output/logs ] && find output/logs -type f -name "*.log" -exec git add {} \;

          if git diff --cached --quiet; then
            echo "✅ No changes to commit."
          else
            git commit -m "✅ Auto-applied jobs (secondary account) and updated CSV + logs"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}
          fi