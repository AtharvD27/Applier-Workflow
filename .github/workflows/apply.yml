name: Auto Apply Jobs

on:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: lock-stealth
  cancel-in-progress: false

jobs:
  auto_apply:
    runs-on: ubuntu-latest

    steps:
      # Add random delay (15-55 minutes after trigger)
      - name: Random delay
        run: |
          # Generate random delay between 15-35 minutes
          DELAY=$((RANDOM % 21 + 15))
          echo "ðŸŽ² Waiting ${DELAY} minutes before starting..."
          echo "Start time: $(date)"
          echo "Will begin at: $(date -d "+${DELAY} minutes")"
          sleep ${DELAY}m

      # 0. Checkout public repo
      - name: Checkout public repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      # 1. Checkout private scripts
      - name: Checkout private scripts
        uses: actions/checkout@v3
        with:
          repository: AtharvD27/Dice-Auto-Applier
          token: ${{ secrets.PRIVATE_SCRIPTS_PAT }}
          path: scripts

      - name: List workspace contents
        run: ls -R . | sed -e 's/$/\/.../g'

      # 2. Setup Python & Chrome
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Chrome & Chromedriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip curl
          wget https://storage.googleapis.com/chrome-for-testing-public/136.0.7103.94/linux64/chrome-linux64.zip
          unzip -q chrome-linux64.zip
          sudo mv chrome-linux64 /opt/chrome
          sudo ln -sf /opt/chrome/chrome /usr/bin/google-chrome
          wget https://storage.googleapis.com/chrome-for-testing-public/136.0.7103.94/linux64/chromedriver-linux64.zip
          unzip -q chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          google-chrome --version
          chromedriver --version

      # 3. Install dependencies
      - name: Install Python dependencies
        working-directory: scripts
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Run the apply script
      - name: Run apply from private repo
        working-directory: scripts
        env:
          APPLY_EMAIL:    ${{ secrets.APPLY_EMAIL }}
          APPLY_PASSWORD: ${{ secrets.APPLY_PASSWORD }}
        run: python src/stealth_apply.py

      - name: Commit and push updates to private repo
        working-directory: scripts
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          [ -d output/logs ] && find output/logs -type f -name "*.log" -exec git add {} \;
          [ -f output/final_ml_jobs.csv ] && git add output/final_ml_jobs.csv

          if git diff --cached --quiet; then
            echo "âœ… No changes to commit in private repo."
          else
            git commit -m "ðŸ”„ Auto-update jobs and logs"
            git push https://x-access-token:${{ secrets.PRIVATE_SCRIPTS_PAT }}@github.com/AtharvD27/Dice-Auto-Applier.git HEAD:main
          fi

