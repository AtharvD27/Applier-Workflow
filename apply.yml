name: Auto Apply Jobs

on:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: lock-stealth
  cancel-in-progress: false

jobs:
  auto_apply:
    runs-on: ubuntu-latest

    steps:
      # 0. Checkout private scripts
      - name: Checkout private scripts
        uses: actions/checkout@v3
        with:
          repository: your-org/my-dice-jobs-scripts
          token: ${{ secrets.PRIVATE_SCRIPTS_PAT }}
          path: scripts

      # 1. Checkout public repo
      - name: Checkout public repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      # 2. Setup Python & Chrome
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Chrome & Chromedriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip curl
          wget https://storage.googleapis.com/chrome-for-testing-public/136.0.7103.94/linux64/chrome-linux64.zip
          unzip -q chrome-linux64.zip
          sudo mv chrome-linux64 /opt/chrome
          sudo ln -sf /opt/chrome/chrome /usr/bin/google-chrome
          wget https://storage.googleapis.com/chrome-for-testing-public/136.0.7103.94/linux64/chromedriver-linux64.zip
          unzip -q chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          google-chrome --version
          chromedriver --version

      # 3. Install dependencies
      - name: Install Python dependencies
        working-directory: scripts
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Run the apply script
      - name: Run apply from private repo
        working-directory: scripts
        env:
          APPLY_EMAIL:    ${{ secrets.APPLY_EMAIL }}
          APPLY_PASSWORD: ${{ secrets.APPLY_PASSWORD }}
        run: python apply_jobs.py

      # 5. Commit final_ml_jobs.csv & logs back to public repo
      - name: Commit and push results
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"
          git add output/final_ml_jobs.csv output/logs/*.log

          if git diff --cached --quiet; then
            echo "✅ No changes to commit."
          else
            git commit -m "✅ Auto-applied jobs and updated CSV + logs"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}
          fi
